//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Auction_House_MVC.ServiceLayer.AuctionServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AuctionData", Namespace="http://schemas.datacontract.org/2004/07/Auction_House_WCF.Models")]
    [System.SerializableAttribute()]
    public partial class AuctionData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double BidIntervalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double BuyOutPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CategoryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime EndDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime StartDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double StartPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UserIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double BidInterval {
            get {
                return this.BidIntervalField;
            }
            set {
                if ((this.BidIntervalField.Equals(value) != true)) {
                    this.BidIntervalField = value;
                    this.RaisePropertyChanged("BidInterval");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double BuyOutPrice {
            get {
                return this.BuyOutPriceField;
            }
            set {
                if ((this.BuyOutPriceField.Equals(value) != true)) {
                    this.BuyOutPriceField = value;
                    this.RaisePropertyChanged("BuyOutPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Category {
            get {
                return this.CategoryField;
            }
            set {
                if ((object.ReferenceEquals(this.CategoryField, value) != true)) {
                    this.CategoryField = value;
                    this.RaisePropertyChanged("Category");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime EndDate {
            get {
                return this.EndDateField;
            }
            set {
                if ((this.EndDateField.Equals(value) != true)) {
                    this.EndDateField = value;
                    this.RaisePropertyChanged("EndDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime StartDate {
            get {
                return this.StartDateField;
            }
            set {
                if ((this.StartDateField.Equals(value) != true)) {
                    this.StartDateField = value;
                    this.RaisePropertyChanged("StartDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double StartPrice {
            get {
                return this.StartPriceField;
            }
            set {
                if ((this.StartPriceField.Equals(value) != true)) {
                    this.StartPriceField = value;
                    this.RaisePropertyChanged("StartPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserId {
            get {
                return this.UserIdField;
            }
            set {
                if ((this.UserIdField.Equals(value) != true)) {
                    this.UserIdField = value;
                    this.RaisePropertyChanged("UserId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserName {
            get {
                return this.UserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserNameField, value) != true)) {
                    this.UserNameField = value;
                    this.RaisePropertyChanged("UserName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ImageData", Namespace="http://schemas.datacontract.org/2004/07/Auction_House_WCF.Models")]
    [System.SerializableAttribute()]
    public partial class ImageData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AuctionIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateAddedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FileNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.IO.Stream FileStreamField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ImgUrlField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UserIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AuctionId {
            get {
                return this.AuctionIdField;
            }
            set {
                if ((this.AuctionIdField.Equals(value) != true)) {
                    this.AuctionIdField = value;
                    this.RaisePropertyChanged("AuctionId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DateAdded {
            get {
                return this.DateAddedField;
            }
            set {
                if ((this.DateAddedField.Equals(value) != true)) {
                    this.DateAddedField = value;
                    this.RaisePropertyChanged("DateAdded");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FileName {
            get {
                return this.FileNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FileNameField, value) != true)) {
                    this.FileNameField = value;
                    this.RaisePropertyChanged("FileName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.IO.Stream FileStream {
            get {
                return this.FileStreamField;
            }
            set {
                if ((object.ReferenceEquals(this.FileStreamField, value) != true)) {
                    this.FileStreamField = value;
                    this.RaisePropertyChanged("FileStream");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ImgUrl {
            get {
                return this.ImgUrlField;
            }
            set {
                if ((object.ReferenceEquals(this.ImgUrlField, value) != true)) {
                    this.ImgUrlField = value;
                    this.RaisePropertyChanged("ImgUrl");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserId {
            get {
                return this.UserIdField;
            }
            set {
                if ((this.UserIdField.Equals(value) != true)) {
                    this.UserIdField = value;
                    this.RaisePropertyChanged("UserId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="AuctionServiceReference.IAuctionService")]
    public interface IAuctionService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuctionService/GetActiveAuctionsByUsername", ReplyAction="http://tempuri.org/IAuctionService/GetActiveAuctionsByUsernameResponse")]
        Auction_House_MVC.ServiceLayer.AuctionServiceReference.AuctionData GetActiveAuctionsByUsername(string userName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuctionService/GetActiveAuctionsByUsername", ReplyAction="http://tempuri.org/IAuctionService/GetActiveAuctionsByUsernameResponse")]
        System.Threading.Tasks.Task<Auction_House_MVC.ServiceLayer.AuctionServiceReference.AuctionData> GetActiveAuctionsByUsernameAsync(string userName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuctionService/GetDoneAuctionsByUsername", ReplyAction="http://tempuri.org/IAuctionService/GetDoneAuctionsByUsernameResponse")]
        Auction_House_MVC.ServiceLayer.AuctionServiceReference.AuctionData GetDoneAuctionsByUsername(string userName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuctionService/GetDoneAuctionsByUsername", ReplyAction="http://tempuri.org/IAuctionService/GetDoneAuctionsByUsernameResponse")]
        System.Threading.Tasks.Task<Auction_House_MVC.ServiceLayer.AuctionServiceReference.AuctionData> GetDoneAuctionsByUsernameAsync(string userName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuctionService/InsertAuction", ReplyAction="http://tempuri.org/IAuctionService/InsertAuctionResponse")]
        int InsertAuction(Auction_House_MVC.ServiceLayer.AuctionServiceReference.AuctionData aData);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuctionService/InsertAuction", ReplyAction="http://tempuri.org/IAuctionService/InsertAuctionResponse")]
        System.Threading.Tasks.Task<int> InsertAuctionAsync(Auction_House_MVC.ServiceLayer.AuctionServiceReference.AuctionData aData);
        
        // CODEGEN: Generating message contract since the operation InsertPicture is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuctionService/InsertPicture", ReplyAction="http://tempuri.org/IAuctionService/InsertPictureResponse")]
        Auction_House_MVC.ServiceLayer.AuctionServiceReference.InsertPictureResponse InsertPicture(Auction_House_MVC.ServiceLayer.AuctionServiceReference.RemoteFileInfo request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuctionService/InsertPicture", ReplyAction="http://tempuri.org/IAuctionService/InsertPictureResponse")]
        System.Threading.Tasks.Task<Auction_House_MVC.ServiceLayer.AuctionServiceReference.InsertPictureResponse> InsertPictureAsync(Auction_House_MVC.ServiceLayer.AuctionServiceReference.RemoteFileInfo request);
        
        // CODEGEN: Generating message contract since the wrapper name (DownloadRequest) of message DownloadRequest does not match the default value (GetPicture)
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuctionService/GetPicture", ReplyAction="http://tempuri.org/IAuctionService/GetPictureResponse")]
        Auction_House_MVC.ServiceLayer.AuctionServiceReference.RemoteFileInfo GetPicture(Auction_House_MVC.ServiceLayer.AuctionServiceReference.DownloadRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuctionService/GetPicture", ReplyAction="http://tempuri.org/IAuctionService/GetPictureResponse")]
        System.Threading.Tasks.Task<Auction_House_MVC.ServiceLayer.AuctionServiceReference.RemoteFileInfo> GetPictureAsync(Auction_House_MVC.ServiceLayer.AuctionServiceReference.DownloadRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuctionService/InsertPictures", ReplyAction="http://tempuri.org/IAuctionService/InsertPicturesResponse")]
        bool InsertPictures(Auction_House_MVC.ServiceLayer.AuctionServiceReference.ImageData[] images);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuctionService/InsertPictures", ReplyAction="http://tempuri.org/IAuctionService/InsertPicturesResponse")]
        System.Threading.Tasks.Task<bool> InsertPicturesAsync(Auction_House_MVC.ServiceLayer.AuctionServiceReference.ImageData[] images);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="RemoteFileInfo", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class RemoteFileInfo {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://tempuri.org/")]
        public string FileName;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://tempuri.org/")]
        public long Length;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public System.IO.Stream FileByteStream;
        
        public RemoteFileInfo() {
        }
        
        public RemoteFileInfo(string FileName, long Length, System.IO.Stream FileByteStream) {
            this.FileName = FileName;
            this.Length = Length;
            this.FileByteStream = FileByteStream;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class InsertPictureResponse {
        
        public InsertPictureResponse() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="DownloadRequest", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class DownloadRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public int AuctionNumber;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string FileName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public int UserId;
        
        public DownloadRequest() {
        }
        
        public DownloadRequest(int AuctionNumber, string FileName, int UserId) {
            this.AuctionNumber = AuctionNumber;
            this.FileName = FileName;
            this.UserId = UserId;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IAuctionServiceChannel : Auction_House_MVC.ServiceLayer.AuctionServiceReference.IAuctionService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AuctionServiceClient : System.ServiceModel.ClientBase<Auction_House_MVC.ServiceLayer.AuctionServiceReference.IAuctionService>, Auction_House_MVC.ServiceLayer.AuctionServiceReference.IAuctionService {
        
        public AuctionServiceClient() {
        }
        
        public AuctionServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public AuctionServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AuctionServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AuctionServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public Auction_House_MVC.ServiceLayer.AuctionServiceReference.AuctionData GetActiveAuctionsByUsername(string userName) {
            return base.Channel.GetActiveAuctionsByUsername(userName);
        }
        
        public System.Threading.Tasks.Task<Auction_House_MVC.ServiceLayer.AuctionServiceReference.AuctionData> GetActiveAuctionsByUsernameAsync(string userName) {
            return base.Channel.GetActiveAuctionsByUsernameAsync(userName);
        }
        
        public Auction_House_MVC.ServiceLayer.AuctionServiceReference.AuctionData GetDoneAuctionsByUsername(string userName) {
            return base.Channel.GetDoneAuctionsByUsername(userName);
        }
        
        public System.Threading.Tasks.Task<Auction_House_MVC.ServiceLayer.AuctionServiceReference.AuctionData> GetDoneAuctionsByUsernameAsync(string userName) {
            return base.Channel.GetDoneAuctionsByUsernameAsync(userName);
        }
        
        public int InsertAuction(Auction_House_MVC.ServiceLayer.AuctionServiceReference.AuctionData aData) {
            return base.Channel.InsertAuction(aData);
        }
        
        public System.Threading.Tasks.Task<int> InsertAuctionAsync(Auction_House_MVC.ServiceLayer.AuctionServiceReference.AuctionData aData) {
            return base.Channel.InsertAuctionAsync(aData);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Auction_House_MVC.ServiceLayer.AuctionServiceReference.InsertPictureResponse Auction_House_MVC.ServiceLayer.AuctionServiceReference.IAuctionService.InsertPicture(Auction_House_MVC.ServiceLayer.AuctionServiceReference.RemoteFileInfo request) {
            return base.Channel.InsertPicture(request);
        }
        
        public void InsertPicture(string FileName, long Length, System.IO.Stream FileByteStream) {
            Auction_House_MVC.ServiceLayer.AuctionServiceReference.RemoteFileInfo inValue = new Auction_House_MVC.ServiceLayer.AuctionServiceReference.RemoteFileInfo();
            inValue.FileName = FileName;
            inValue.Length = Length;
            inValue.FileByteStream = FileByteStream;
            Auction_House_MVC.ServiceLayer.AuctionServiceReference.InsertPictureResponse retVal = ((Auction_House_MVC.ServiceLayer.AuctionServiceReference.IAuctionService)(this)).InsertPicture(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Auction_House_MVC.ServiceLayer.AuctionServiceReference.InsertPictureResponse> Auction_House_MVC.ServiceLayer.AuctionServiceReference.IAuctionService.InsertPictureAsync(Auction_House_MVC.ServiceLayer.AuctionServiceReference.RemoteFileInfo request) {
            return base.Channel.InsertPictureAsync(request);
        }
        
        public System.Threading.Tasks.Task<Auction_House_MVC.ServiceLayer.AuctionServiceReference.InsertPictureResponse> InsertPictureAsync(string FileName, long Length, System.IO.Stream FileByteStream) {
            Auction_House_MVC.ServiceLayer.AuctionServiceReference.RemoteFileInfo inValue = new Auction_House_MVC.ServiceLayer.AuctionServiceReference.RemoteFileInfo();
            inValue.FileName = FileName;
            inValue.Length = Length;
            inValue.FileByteStream = FileByteStream;
            return ((Auction_House_MVC.ServiceLayer.AuctionServiceReference.IAuctionService)(this)).InsertPictureAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Auction_House_MVC.ServiceLayer.AuctionServiceReference.RemoteFileInfo Auction_House_MVC.ServiceLayer.AuctionServiceReference.IAuctionService.GetPicture(Auction_House_MVC.ServiceLayer.AuctionServiceReference.DownloadRequest request) {
            return base.Channel.GetPicture(request);
        }
        
        public long GetPicture(int AuctionNumber, ref string FileName, int UserId, out System.IO.Stream FileByteStream) {
            Auction_House_MVC.ServiceLayer.AuctionServiceReference.DownloadRequest inValue = new Auction_House_MVC.ServiceLayer.AuctionServiceReference.DownloadRequest();
            inValue.AuctionNumber = AuctionNumber;
            inValue.FileName = FileName;
            inValue.UserId = UserId;
            Auction_House_MVC.ServiceLayer.AuctionServiceReference.RemoteFileInfo retVal = ((Auction_House_MVC.ServiceLayer.AuctionServiceReference.IAuctionService)(this)).GetPicture(inValue);
            FileName = retVal.FileName;
            FileByteStream = retVal.FileByteStream;
            return retVal.Length;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Auction_House_MVC.ServiceLayer.AuctionServiceReference.RemoteFileInfo> Auction_House_MVC.ServiceLayer.AuctionServiceReference.IAuctionService.GetPictureAsync(Auction_House_MVC.ServiceLayer.AuctionServiceReference.DownloadRequest request) {
            return base.Channel.GetPictureAsync(request);
        }
        
        public System.Threading.Tasks.Task<Auction_House_MVC.ServiceLayer.AuctionServiceReference.RemoteFileInfo> GetPictureAsync(int AuctionNumber, string FileName, int UserId) {
            Auction_House_MVC.ServiceLayer.AuctionServiceReference.DownloadRequest inValue = new Auction_House_MVC.ServiceLayer.AuctionServiceReference.DownloadRequest();
            inValue.AuctionNumber = AuctionNumber;
            inValue.FileName = FileName;
            inValue.UserId = UserId;
            return ((Auction_House_MVC.ServiceLayer.AuctionServiceReference.IAuctionService)(this)).GetPictureAsync(inValue);
        }
        
        public bool InsertPictures(Auction_House_MVC.ServiceLayer.AuctionServiceReference.ImageData[] images) {
            return base.Channel.InsertPictures(images);
        }
        
        public System.Threading.Tasks.Task<bool> InsertPicturesAsync(Auction_House_MVC.ServiceLayer.AuctionServiceReference.ImageData[] images) {
            return base.Channel.InsertPicturesAsync(images);
        }
    }
}
